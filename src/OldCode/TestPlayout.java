package OldCode;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.util.Random;

public class TestPlayout 
{
	private static int millisecondsPerMove=5400;
	private static int mode = BoardPanel.SAMEGAME;
	private static double learningRate = 1; 
	private static double oldC = UCTPlayer.UCTConstant;
	private static double oldD = UCTPlayer.DeviationConstant;
	private static double oldScore = -1;
	private static double newScore = 0;
	private static Random r = new Random();
	
	public static void main(String[] args) 
	{
		try
		{
		RealisationProbabilities.initialize();
		System.out.println("Starting Test Run");
		
		FileWriter fstream = new FileWriter(r.nextLong()+".txt");
		BufferedWriter out = new BufferedWriter(fstream);
		
		UCTPlayer bot = new UCTPlayer();
		bot.output=false;
		
		double[] avrg = new double[20]; 
		double[] max = new double[20];
		int[][] primareVariation = new int[20][225];
		double bestRun=0;
		double knowledgeParameter=0.001;
		Evaluation.chanceOfPlayingChosenColor=knowledgeParameter;
		
		//Evaluation.RWeight=Evaluation.RWeight+r.nextGaussian();
		//Evaluation.RPWeight=Evaluation.RPWeight+r.nextGaussian();
		//Evaluation.TCRWeight=Evaluation.TCRWeight+r.nextGaussian();
		//Evaluation.TRWeight=Evaluation.TRWeight+r.nextGaussian();
		//Evaluation.FRPWeight=Evaluation.FRPWeight+r.nextGaussian();
		//Evaluation.CMWeight=Evaluation.CMWeight+r.nextGaussian();
		
		out.write("Settings:");
		out.newLine();
		out.write("UCT Constant: "+bot.UCTConstant);
		out.newLine();
		out.write("Deviation Constant: "+bot.DeviationConstant);
		out.newLine();
		out.write("Number of visited nodes before expanding: "+bot.numberOfVisitsBeforeExpanding);
		out.newLine();
		out.write("Chance of playing chosen Color: "+knowledgeParameter);
		out.newLine();
		out.write("Top Score weight: "+bot.topScoreWeight);
		out.newLine();
		out.write("Number of nodes: "+bot.maxNumberOfNodes);
		out.newLine();
		out.write("Playout Strategy");
		out.newLine();
		out.write("Random Weight: "+Evaluation.RWeight);
		out.newLine();
		out.write("TCR Weight: "+Evaluation.TCRWeight);
		out.newLine();
		out.write("TR Weight: "+Evaluation.TRWeight);
		out.newLine();
		out.write("RP Weight: "+Evaluation.RPWeight);
		out.newLine();
		out.write("FRP Weight: "+Evaluation.FRPWeight);
		out.newLine();
		out.write("CM Weight: "+Evaluation.CMWeight);
		out.newLine();
		long startTime = System.currentTimeMillis();
		
		
		for (int i=0;i<positions.length;i++)
		{
		
			int runsPerPosition = 2000;
			int average=0;
			
			//out.write("Position:");
			//SameGameBoard.println(positions[i], 15, 15);
			
			for (int j=0;j<runsPerPosition;j++)
			{				
				byte[] p = positions[i];
				
				bot.getMove(p, 15, 15, BoardPanel.SAMEGAME, millisecondsPerMove);
				
				//out.write("Position nr. "+(i+1)+"  Score: "+bot.bestScore);
				
				int counter=1;
				while (bot.primaryVariant[counter]!=-1)
				{
					//out.write(" ["+bot.primaryVariant[counter]%15+","+bot.primaryVariant[counter]/15+"]");
					counter++;
				}
				//out.newLine();
				avrg[i]=((avrg[i]*j)+bot.bestScore)/(j+1.0);
				if (bot.bestScore>max[i])
				{
					max[i]=bot.bestScore;
					System.arraycopy(bot.primaryVariant, 0, primareVariation[i], 0, 225);
				}
				average+=bot.bestScore;
				Runtime.getRuntime().gc();
				
			}
			if (average>bestRun) bestRun=average;
		}
		
		
		long endTime = System.currentTimeMillis();
		
		
		double averageTotal=0;
		double bestCombinedRun=0;
		for (int i=0;i<20;i++)
		{
			out.write("Position nr.\t"+(i+1)+"\tAverage Score: \t"+avrg[i]+"\tBest Score:\t"+max[i]);
			int counter=1;
			out.write("\tPrimary Variation:");
			while (primareVariation[i][counter]!=-1)
			{
				out.write("\t["+primareVariation[i][counter]%15+","+primareVariation[i][counter]/15+"]");
				counter++;
			}
			out.newLine();
			averageTotal+=avrg[i];
			bestCombinedRun+=max[i];
		}
		out.newLine();
		out.write("Average:\t"+Math.round(averageTotal)+"\tBest Combined Score:\t"+bestCombinedRun);
		out.newLine();
		out.write("Total time:\t"+(int)((endTime-startTime)/1000.0)+"\tseconds");
		out.close();
		System.exit(0);
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}
	
	private static byte[][] positions = {{3,1,1,4,1,0,4,0,4,4,1,1,0,2,3,
		  3,3,2,0,4,4,1,3,1,2,0,0,4,0,4,
	      0,2,3,4,3,0,3,0,0,3,4,4,1,1,1,
	      2,3,4,0,2,3,0,2,4,4,4,3,0,2,3,
	      1,2,1,3,1,2,0,1,2,1,0,3,4,0,1,
	      0,4,4,3,0,3,4,2,2,2,0,2,3,4,0,
	      2,4,3,4,2,3,1,1,1,3,4,1,0,3,1,
	      1,0,0,4,0,3,1,2,1,0,4,1,3,3,1,
	      1,3,3,2,0,4,3,1,3,0,4,1,0,0,3,
	      0,3,3,4,2,3,0,0,2,1,2,3,4,0,1,
	      0,4,1,2,0,1,3,4,3,3,4,1,4,0,4,
	      2,2,3,1,0,4,0,1,2,4,1,3,3,0,1,
	      3,3,0,2,3,2,1,4,3,1,3,0,2,1,3,
	      1,0,3,2,1,4,4,4,4,0,4,2,1,3,4,
	      1,0,1,0,1,1,2,2,1,0,0,1,4,3,2},
		 
	      {3,3,0,1,0,2,1,2,3,2,3,1,1,1,0,
		  4,1,3,4,0,3,3,2,2,4,0,2,4,0,0,
		  2,3,2,2,0,3,1,0,4,4,0,2,4,0,4,
		  0,3,4,4,2,2,1,3,3,1,3,0,3,3,4,
		  0,0,2,1,2,1,3,4,3,2,1,2,3,1,4,
		  1,2,4,2,0,0,0,1,1,1,0,0,2,4,4,
		  1,0,3,3,3,2,1,0,4,2,4,1,4,3,0,
		  4,4,3,3,0,2,3,3,4,3,0,3,0,0,4,
		  3,3,3,1,4,3,3,3,0,4,2,0,3,2,0,
		  2,4,1,1,1,1,4,0,0,3,0,4,0,4,3,
		  3,3,0,1,4,1,2,1,1,0,3,4,2,1,0,
		  2,2,3,3,2,0,4,3,3,4,0,4,3,3,1,
		  0,1,3,2,1,2,1,1,0,2,4,1,4,0,3,
		  4,1,4,0,2,1,3,1,3,1,4,0,1,0,3,
		  1,3,2,3,2,2,4,2,2,4,3,0,3,1,1},
		  
		  {4,2,4,3,1,0,3,3,2,2,4,3,1,4,2,
		  3,0,3,4,0,3,3,3,2,4,4,3,1,3,3,
		  2,0,4,4,0,1,2,2,2,3,4,0,4,4,0,
		  0,4,3,0,0,2,4,2,1,2,0,3,2,4,2,
		  0,2,0,2,0,1,1,3,2,1,1,2,3,4,0,
		  1,0,1,0,4,3,3,3,4,2,2,2,3,4,1,
		  2,3,4,3,4,2,2,4,2,4,3,4,4,0,1,
		  4,2,3,2,2,0,1,2,4,3,3,0,0,2,1,
		  3,4,4,3,0,4,3,4,1,0,0,2,1,4,3,
		  4,0,1,3,1,0,2,3,0,2,0,2,3,0,1,
		  4,2,0,0,0,2,2,1,0,2,3,1,1,3,1,
		  0,3,1,1,3,3,2,1,2,0,0,4,2,4,1,
		  2,1,4,4,4,0,3,3,4,2,0,0,2,0,0,
		  1,0,4,4,0,1,3,2,4,0,4,2,0,0,1,
		  2,2,2,2,3,3,0,4,3,3,4,0,4,1,2},
		  
		  {4,2,2,4,1,3,3,2,4,0,4,2,3,4,2,
		  2,0,2,1,2,1,0,1,2,1,1,3,0,4,2,
		  0,2,3,2,0,0,4,1,0,4,3,0,0,3,2,
		  2,2,3,1,1,0,0,1,0,1,1,4,3,0,0,
		  4,2,0,4,2,2,0,3,0,0,2,2,1,4,2,
		  1,4,3,3,2,3,0,4,4,0,0,2,2,3,0,
		  2,1,1,4,1,0,1,0,4,4,1,0,4,1,3,
		  3,3,0,2,1,3,1,1,4,0,2,3,3,3,3,
		  2,3,3,1,3,1,0,4,1,0,1,2,3,0,4,
		  3,2,1,1,3,4,0,2,4,2,4,2,0,2,0,
		  0,3,0,1,4,0,0,0,4,2,1,0,2,4,0,
		  2,0,1,4,2,3,1,4,2,0,1,0,3,4,2,
		  0,4,2,0,3,4,4,3,1,1,3,4,2,1,4,
		  4,2,4,0,4,3,0,2,2,4,1,4,3,4,1,
		  4,3,2,2,2,1,1,2,3,3,1,2,0,3,2},
		  
		  {3,4,4,3,2,3,2,1,3,4,1,2,3,3,2,
		  2,0,2,0,3,1,0,3,1,1,2,1,4,3,4,
		  1,3,1,0,3,1,3,2,3,4,0,0,1,4,1,
		  0,2,1,0,2,2,2,4,1,0,4,4,3,3,2,
		  2,3,1,3,0,4,0,2,3,0,1,4,4,2,3,
		  3,1,3,3,2,3,0,1,0,4,3,4,0,1,4,
		  4,4,4,2,2,3,0,0,0,1,0,1,2,1,3,
		  2,1,3,4,4,0,4,1,0,4,0,1,2,1,3,
		  3,4,3,1,2,0,1,3,3,0,1,4,2,0,0,
		  2,3,0,1,2,4,3,3,0,1,1,2,2,3,3,
		  4,4,1,0,3,3,4,4,2,2,4,2,0,3,0,
		  3,1,0,4,3,2,0,2,3,1,4,3,1,2,2,
		  2,2,3,0,2,4,1,3,0,3,2,1,3,4,2,
		  2,4,3,1,3,0,3,2,0,4,3,2,2,3,4,
		  0,4,2,2,2,3,2,0,1,1,4,0,1,3,3},
		  
		  {2,4,2,0,4,2,2,3,1,0,1,3,4,2,0,
		  2,3,3,2,3,1,3,3,0,1,4,1,0,0,1,
		  0,4,3,0,3,1,3,3,3,1,0,2,4,2,1,
		  3,0,1,0,1,2,3,0,0,2,1,1,1,4,4,
		  0,1,1,1,2,0,2,1,3,4,2,0,3,1,0,
		  1,1,1,4,1,1,0,0,1,1,4,1,1,2,1,
		  3,3,0,1,1,3,2,0,0,0,0,1,2,0,1,
		  0,3,0,3,4,0,1,1,2,1,4,2,1,0,2,
		  1,2,2,2,2,3,4,1,3,1,4,2,4,1,1,
		  2,2,0,3,3,0,2,2,3,3,2,2,1,0,3,
		  2,4,0,0,4,0,4,3,4,4,3,4,1,4,4,
		  2,1,2,3,1,1,2,2,1,0,3,1,4,4,0,
		  2,3,2,2,1,1,4,0,1,4,4,0,4,3,3,
		  1,1,3,0,3,1,4,3,4,1,0,4,1,1,4,
		  0,4,4,4,2,2,4,3,1,1,3,2,4,4,1},
		  
		  {3,4,0,3,1,2,0,1,3,1,2,4,1,1,3,
	      3,1,4,3,0,0,1,3,0,2,0,4,4,4,4,
	      0,4,3,2,1,1,0,2,2,1,3,4,0,2,3,
	      2,4,0,1,3,3,3,2,2,2,2,0,2,2,0,
	      0,4,0,0,2,1,0,1,4,3,3,3,1,0,2,
	      1,0,4,1,2,4,4,2,2,0,0,0,3,4,4,
	      4,2,1,3,1,2,0,1,3,4,2,2,1,3,2,
	      1,1,1,0,3,0,3,1,3,3,1,1,2,3,0,
	      1,2,4,3,1,4,1,1,1,0,2,3,0,3,3,
	      0,4,1,3,4,0,4,1,4,0,4,2,3,0,1,
	      0,4,3,4,2,4,1,3,1,3,0,4,3,0,0,
	      3,1,1,1,0,4,2,0,3,0,4,4,2,4,4,
	      4,0,4,3,1,4,1,3,2,3,0,1,0,1,1,
	      3,3,4,2,4,4,2,0,3,4,3,0,1,0,3,
	      0,2,3,4,4,2,4,1,0,0,0,4,2,4,0},
	      
	      {3,1,3,1,4,4,2,2,0,4,0,2,2,3,1,
	      1,1,2,3,3,1,0,2,2,2,0,2,4,1,1,
	      4,4,1,2,4,2,1,4,1,2,3,3,2,1,4,
	      1,0,2,2,3,4,1,3,2,2,1,3,4,3,2,
	      3,1,1,0,0,1,2,0,3,2,4,3,4,3,1,
	      1,1,3,0,4,2,1,3,0,1,2,4,4,0,3,
	      0,1,1,1,0,1,2,3,3,1,0,1,0,0,3,
	      2,3,2,3,1,1,1,2,4,0,2,1,2,3,3,
	      0,1,3,0,4,3,1,1,4,0,1,3,0,3,0,
	      1,3,3,0,3,0,0,0,3,4,1,3,0,0,0,
	      4,4,2,1,3,1,0,1,1,3,1,3,2,4,3,
	      0,3,0,2,3,1,1,1,3,3,1,2,3,2,2,
	      3,2,2,0,3,0,3,1,0,0,3,3,2,4,2,
	      0,1,2,2,0,2,4,4,1,3,4,3,1,1,4,
	      4,4,3,0,4,3,3,3,4,1,3,4,4,3,1},

	      {1,3,4,0,2,1,4,3,0,0,1,2,3,1,1,
		  0,0,3,0,3,2,3,0,1,4,0,3,3,3,2,
		  2,4,1,2,0,1,2,1,0,0,3,1,0,2,2,
		  0,2,1,2,1,1,0,0,0,3,3,0,1,1,3,
		  1,4,2,3,1,3,3,0,4,2,3,1,0,4,4,
		  2,1,1,4,1,1,4,0,4,4,2,0,0,4,0,
		  3,4,4,3,0,0,2,0,4,1,2,4,0,3,3,
		  1,4,0,4,0,0,3,3,4,4,0,2,2,4,4,
		  0,1,0,4,2,3,3,0,0,2,0,4,3,4,1,
		  3,1,1,4,2,4,0,0,2,0,3,1,2,4,3,
		  0,0,4,2,4,1,2,0,0,0,3,0,3,3,3,
		  0,0,1,0,1,2,2,0,3,4,3,2,4,3,4,
		  1,1,0,2,0,4,3,3,1,1,4,3,2,4,1,
		  0,1,2,2,3,4,0,3,1,4,0,0,3,1,1,
		  0,3,0,0,1,0,1,1,1,3,1,2,0,0,0},
		  
		  {0,1,3,3,4,3,4,3,2,4,4,0,3,2,1,
		  4,0,1,1,0,0,0,1,2,0,3,0,0,2,1,
		  1,2,4,3,0,2,0,2,3,4,3,1,2,2,3,
		  3,4,3,0,1,3,3,2,3,1,1,0,3,4,2,
		  2,0,0,3,2,0,2,3,3,3,0,1,1,1,1,
		  2,4,2,2,1,4,3,2,1,4,0,1,4,4,1,
		  0,0,0,2,2,3,4,3,2,3,0,3,4,3,4,
		  1,2,0,4,1,2,2,4,0,2,4,2,4,0,3,
		  3,4,3,3,1,1,0,4,4,2,1,0,0,1,3,
		  1,2,2,2,4,3,2,0,2,1,0,1,0,1,3,
		  2,3,4,2,1,0,1,2,3,2,4,0,2,4,3,
		  1,3,2,4,3,0,4,4,1,1,4,1,2,4,0,
		  3,0,2,2,1,4,3,4,1,2,2,1,1,3,1,
		  2,0,2,1,0,4,1,4,0,3,2,3,0,2,4,
		  0,3,1,1,0,1,4,1,4,1,1,1,0,4,2},
		  
		  {4,1,2,0,2,3,4,1,4,4,1,4,3,1,3,
		  1,3,1,3,4,0,3,4,2,3,3,2,3,4,1,
		  1,3,2,2,3,4,2,3,4,0,3,4,1,2,3,
		  1,3,2,4,0,2,0,0,1,2,1,3,4,4,2,
		  4,0,2,2,0,1,1,0,0,1,0,2,3,2,4,
		  2,2,0,3,4,1,0,4,3,4,4,2,3,3,4,
		  4,4,0,2,0,3,4,1,1,4,4,2,0,1,1,
		  3,1,0,4,1,1,1,3,2,4,1,3,2,0,2,
		  0,2,0,0,1,1,2,0,4,1,1,0,2,2,4,
		  3,1,0,4,3,4,3,1,1,0,0,3,2,3,4,
		  4,4,1,2,4,0,4,2,0,3,2,3,4,0,0,
		  2,4,3,0,1,3,1,3,1,0,1,0,0,1,4,
		  1,2,1,2,0,0,3,0,1,1,0,2,3,1,2,
		  3,2,0,1,3,0,2,4,3,4,4,4,0,3,0,
		  2,3,3,0,2,2,4,3,0,2,1,2,3,2,0},
		  
		  {1,2,2,4,2,3,4,2,4,1,2,2,3,3,4,
		  3,1,1,4,1,1,1,1,1,2,1,1,4,1,0,
		  1,4,1,4,4,2,1,4,0,3,4,0,2,3,3,
		  3,3,1,2,0,3,3,3,2,4,0,1,2,3,0,
		  4,3,4,1,3,0,4,4,3,4,0,4,0,0,2,
		  2,0,3,1,2,4,4,4,0,0,2,3,0,0,3,
		  0,4,0,3,4,2,1,1,0,3,3,3,2,2,1,
		  0,2,0,3,1,4,0,0,1,2,0,3,4,1,2,
		  3,2,2,2,1,1,1,4,3,2,0,2,4,2,2,
		  4,3,3,0,3,0,0,4,0,0,2,2,3,3,1,
		  4,2,3,4,1,2,3,1,3,0,4,4,4,0,2,
		  0,1,3,1,2,3,2,4,3,3,1,2,4,0,1,
		  4,1,3,3,1,0,3,2,0,1,4,0,2,0,2,
		  4,0,2,4,1,0,0,4,2,0,0,4,4,3,0,
		  1,1,1,3,4,2,3,2,1,2,0,1,4,1,0},
		  
		  {4,0,1,4,3,3,1,4,1,2,4,1,0,0,2,
		  0,1,4,0,3,0,0,2,4,2,2,3,3,2,4,
		  0,2,1,0,3,3,3,0,0,4,4,3,1,1,4,
		  4,4,2,1,0,2,4,3,3,2,2,4,2,4,0,
		  3,0,0,4,4,2,2,1,3,4,3,2,4,2,0,
		  0,4,1,4,4,4,4,4,1,2,3,4,2,3,3,
		  0,1,2,0,0,2,2,1,3,4,2,0,0,4,1,
		  4,3,3,2,0,0,1,0,1,4,3,2,3,1,1,
		  3,4,2,2,0,2,3,3,3,0,0,1,2,1,3,
		  1,3,2,1,2,2,4,1,1,1,2,3,1,3,1,
		  0,0,2,1,2,1,1,4,1,1,0,2,1,2,0,
		  4,1,2,1,0,3,1,0,3,4,0,4,3,3,2,
		  4,3,0,0,3,4,3,3,3,3,1,1,3,2,1,
		  0,1,1,3,0,1,1,0,4,0,4,0,2,0,4,
		  2,2,1,4,4,2,2,0,3,4,3,0,2,4,3},
		  
		  {2,2,4,0,2,4,0,0,1,4,0,3,4,3,3,
		  0,4,3,1,0,3,2,0,1,2,2,1,4,4,0,
		  2,1,2,3,3,2,1,2,3,3,0,4,2,1,0,
		  4,4,3,3,2,4,1,0,1,4,4,0,4,2,1,
		  3,3,0,1,2,2,3,1,3,0,1,3,2,3,3,
		  1,2,0,3,4,0,4,2,2,2,1,3,3,3,1,
		  4,0,0,1,1,1,1,4,3,3,2,1,3,2,0,
		  4,1,4,4,1,0,0,2,0,3,2,2,0,2,3,
		  2,3,3,1,4,3,0,1,0,4,4,0,0,2,1,
		  0,1,2,2,4,3,1,1,4,4,2,4,4,2,4,
		  2,4,1,1,0,3,3,3,0,4,4,0,0,2,0,
		  3,2,1,3,0,4,4,2,3,0,2,1,1,3,1,
		  0,4,3,3,1,2,0,2,2,1,2,3,0,0,1,
		  4,3,4,2,1,1,3,0,4,1,4,1,4,2,0,
		  2,1,3,2,0,1,4,0,1,4,0,4,0,4,3},
		  
		  {0,1,2,1,3,4,3,2,1,2,1,2,2,3,4,
		  4,0,0,1,3,0,4,2,0,4,4,4,2,1,1,
		  3,0,0,1,2,1,1,3,0,0,3,2,4,0,0,
		  4,2,1,4,4,1,4,0,0,3,2,0,2,2,0,
		  3,3,4,2,1,2,4,1,3,4,0,4,2,3,0,
		  0,4,4,1,2,2,1,4,4,2,3,3,4,4,1,
		  3,1,1,3,2,2,0,3,2,3,4,4,3,2,0,
		  2,4,1,3,2,0,2,4,4,4,1,4,4,0,0,
		  1,4,2,1,2,0,3,3,0,1,3,3,2,4,3,
		  2,2,3,2,1,1,0,0,1,1,3,1,2,4,3,
		  2,1,0,2,2,0,3,2,2,1,4,1,1,4,0,
		  0,1,3,2,1,0,4,0,0,3,3,0,3,0,4,
		  1,2,1,3,4,3,1,1,3,0,0,4,3,1,4,
		  0,3,3,3,1,1,4,0,0,4,2,4,1,0,3,
		  3,0,3,2,1,4,0,3,3,1,2,2,0,4,2},

		  {2,0,1,4,4,3,1,4,2,0,4,0,4,0,1,
		  3,3,0,2,1,1,1,4,2,4,3,4,2,1,0,
		  4,1,4,4,1,2,1,1,1,2,3,1,0,3,3,
		  4,4,2,3,3,0,2,0,3,2,1,4,4,1,4,
		  1,4,1,3,3,3,1,0,2,2,2,2,2,3,0,
		  0,4,2,3,0,3,1,0,1,1,3,1,3,2,1,
		  2,0,2,4,1,1,2,1,3,1,1,1,2,2,2,
		  1,3,3,3,1,1,0,0,3,3,0,2,1,1,1,
		  0,0,0,4,4,1,3,2,4,1,0,0,3,3,0,
		  4,3,2,3,1,3,3,3,4,3,1,2,2,1,1,
		  1,1,1,1,2,0,2,1,4,1,3,1,1,1,2,
		  0,1,2,1,0,4,0,2,3,1,0,0,0,1,0,
		  0,1,1,4,3,3,4,4,0,0,1,0,1,2,4,
		  3,2,2,1,1,4,0,2,1,0,1,0,4,4,4,
		  4,0,1,1,2,2,4,3,4,1,2,4,4,3,4},

		  {0,2,2,2,4,1,2,0,4,0,2,3,0,2,2,
		  4,4,4,2,2,2,1,2,3,2,3,0,0,2,1,
		  3,2,0,1,2,3,2,4,3,1,0,4,2,0,2,
		  2,1,2,0,0,2,2,3,4,3,2,2,2,1,3,
		  0,2,0,3,2,0,2,1,2,2,2,3,3,0,2,
		  3,1,0,4,3,0,1,1,0,3,0,0,2,3,4,
		  0,3,4,1,3,4,3,1,1,3,3,1,2,1,3,
		  4,2,3,1,1,0,3,3,4,4,1,1,4,4,3,
		  3,0,4,1,1,1,3,3,1,4,1,1,4,4,2,
		  2,1,3,0,2,2,4,2,4,2,1,1,2,2,0,
		  0,1,3,2,4,4,0,0,0,4,2,2,4,2,2,
		  3,0,1,2,4,1,0,3,3,1,0,4,0,2,2,
		  4,2,1,4,2,2,2,2,0,2,1,0,4,3,0,
		  0,4,3,2,0,2,3,2,4,2,1,1,1,3,4,
		  4,2,4,4,0,2,0,1,3,4,2,4,2,3,1},
		  
		  {0,2,2,4,4,3,3,3,3,0,4,3,0,2,3,
		  4,1,4,4,4,1,3,1,4,1,0,3,0,2,1,
		  0,4,1,3,0,3,1,3,3,2,4,0,4,3,2,
		  1,2,3,3,4,2,1,0,2,3,3,3,2,3,4,
		  0,4,1,4,1,1,2,3,0,2,1,3,1,0,2,
		  3,1,3,4,1,3,3,1,4,3,3,2,4,4,0,
		  0,2,4,4,1,0,0,3,2,3,2,3,3,3,2,
		  0,1,4,3,3,1,2,1,3,2,3,1,2,0,2,
		  0,2,0,2,3,1,3,4,1,1,0,2,1,4,1,
		  0,3,4,0,0,2,3,2,4,3,3,0,0,0,3,
		  2,4,0,2,2,0,3,1,0,2,3,2,3,2,3,
		  4,3,1,1,4,3,1,1,3,1,3,0,4,1,3,
		  4,2,1,1,3,3,0,3,0,4,0,3,4,3,0,
		  1,2,4,4,2,4,3,4,1,4,3,0,0,0,2,
		  4,3,3,2,3,3,0,0,1,1,2,3,3,4,2},
		  
		  {4,4,1,4,1,1,2,4,0,3,3,0,1,2,0,
		  4,1,1,4,3,1,1,2,2,3,0,2,4,0,3,
		  3,2,3,4,0,1,4,0,2,4,4,1,2,3,0,
		  0,4,3,4,0,2,4,0,4,4,4,1,4,3,4,
		  4,0,1,4,2,0,1,2,4,3,0,1,4,4,3,
		  3,1,4,2,2,1,2,1,2,2,4,2,1,2,2,
		  2,4,2,0,4,0,3,4,3,0,2,3,3,3,0,
		  3,4,3,4,0,0,0,1,1,4,1,2,1,3,3,
		  4,4,4,1,2,4,2,4,0,1,4,1,4,4,3,
		  0,4,2,2,4,0,3,1,3,2,4,1,4,4,4,
		  0,0,2,1,4,0,2,4,3,4,0,0,4,3,0,
		  4,2,1,0,2,2,4,2,2,2,3,3,1,0,0,
		  4,1,3,3,4,3,1,3,2,1,1,3,1,4,2,
		  1,1,4,0,4,3,3,2,0,2,4,3,1,4,0,
		  3,3,1,4,1,4,0,4,0,4,3,0,4,4,0},
		  
		  {3,0,1,3,3,0,0,1,0,0,2,4,0,0,1,
		  1,2,2,3,2,2,0,4,0,2,3,2,2,2,1,
		  3,1,0,0,0,0,4,4,1,3,1,3,2,0,4,
		  0,1,0,2,0,3,4,3,2,3,0,2,0,3,4,
		  2,3,2,2,0,3,3,0,0,3,0,3,4,1,1,
		  0,3,3,2,0,4,1,2,4,1,2,4,4,1,0,
		  3,2,4,0,4,1,4,3,2,1,1,4,0,0,2,
		  1,4,1,3,0,4,0,3,2,3,2,0,0,0,1,
		  0,0,0,1,4,2,1,0,4,4,4,3,1,0,4,
		  3,3,3,1,0,3,1,2,0,2,4,3,4,1,1,
		  1,1,1,3,0,2,2,3,0,4,3,4,4,1,1,
		  0,2,0,0,2,0,0,1,3,0,2,3,0,2,4,
		  4,3,3,2,4,0,0,0,4,3,1,0,4,1,2,
		  2,2,3,2,0,4,2,0,0,4,1,4,4,0,1,
		  3,4,1,4,4,0,0,0,0,1,0,2,1,0,0}};
}
